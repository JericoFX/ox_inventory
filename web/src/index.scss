@use 'sass:color';

$mainColor: #1a1a1a;
$textColor: #c1c2c5;
$mainFont: Roboto;

$secondaryColor: #212121;
$secondaryColorHighlight: #424242;
$secondaryColorLight: rgba(0, 0, 0, 0.5);
$secondaryColorDark: #1a1a1a;

$gridCols: 5;
$gridRows: 5;
$gridSize: 10.2vh;
$gridGap: 2px;
$containerSize: calc(#{$gridRows} * #{$gridSize + 0.22vh} + #{$gridRows} * #{$gridGap});

$primaryColor: #4a5336;
$accentColor: #d08b45;
$buttonColor: rgba(0, 0, 0, 0.5);

$rarityCommon: rgba(255, 255, 255, 0.12);
$rarityUncommon: rgba(46, 204, 113, 0.5);
$rarityRare: rgba(52, 152, 219, 0.6);
$rarityEpic: rgba(155, 89, 182, 0.6);
$rarityLegendary: rgba(241, 196, 15, 0.7);

$labelBg: rgba(255, 255, 255, 0.05);

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',
    'Droid Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  height: 100vh;
  background: none !important;
  overflow: hidden !important;
  user-select: none;
}

#root {
  height: 100%;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;
}

::-webkit-scrollbar {
  display: none;
}

p {
  margin: 0;
  padding: 0;
  font-family: $mainFont;
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.app-wrapper {
  height: 100%;
  width: 100%;
  color: white;
}

.context-menu-list {
  min-width: 200px;
  background-color: $mainColor;
  color: $textColor;
  padding: 4px;
  border-color: rgba(0, 0, 0, 0.2);
  border-style: inset;
  border-width: 1px;
  border-radius: 4px;
  outline: none;
  display: flex;
  flex-direction: column;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.6);
}

.context-menu-item {
  padding: 8px;
  border-radius: 4px;
  background-color: transparent;
  outline: none;
  border: none;
  color: $textColor;
  display: flex;
  justify-content: space-between;
  align-items: center;
  &:active {
    transform: none;
  }
  &:hover {
    background-color: $buttonColor;
    cursor: pointer;
  }
}

.tooltip-description {
  padding-top: 5px;
}

.tooltip-markdown > p {
  margin: 0;
}

button:active {
  transform: translateY(3px);
}

.item-drag-preview {
  width: 7.7vh;
  height: 7.7vh;
  z-index: 1;
  position: fixed;
  pointer-events: none;
  top: 0;
  left: 0;
  background-repeat: no-repeat;
  background-position: center;
  background-size: 7vh;
  image-rendering: -webkit-optimize-contrast;
}

.inventory-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  height: 100%;

  gap: 20px;
}

.inventory-stack {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  height: 100%;
  max-height: 100vh;
  overflow-y: auto;

  gap: 20px;

  .inventory-wrapper {
    height: auto;
  }
}

.inventory-control {
  display: flex;

  .inventory-control-wrapper {
    display: flex;
    flex-direction: column;
    gap: 20px;
    justify-content: center;
    align-items: center;
  }

  .inventory-control-input {
    transition: 200ms;
    padding: 16px 8px;
    border-radius: 2.5%;
    font-family: $mainFont;
    font-size: 16px;
    text-align: center;
    outline: none;
    border: none;
    color: #fff;
    background-color: $secondaryColor;
    &:focus-within {
      background-color: $secondaryColorDark;
    }
  }

  .inventory-control-button {
    font-size: 14px;
    color: #fff;
    background-color: transparent;
    transition: all 180ms;
    padding: 10px 8px;
    border-radius: 4px;
    border: 1px solid rgba(255, 255, 255, 0.15);
    text-transform: uppercase;
    font-family: $mainFont;
    width: 100%;
    font-weight: 500;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 6px;
    svg {
      width: 1em;
      height: 1em;
      fill: $textColor;
      transition: fill 180ms;
    }
    &:hover {
      background-color: $buttonColor;
      border-color: color.adjust($buttonColor, $lightness: 20%);
      svg {
        fill: color.adjust($textColor, $lightness: 10%);
      }
    }
    &:active {
      transform: translateY(1px);
    }
  }
}

.useful-controls-dialog {
  background-color: $mainColor;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: $textColor;
  width: 450px;
  display: flex;
  flex-direction: column;
  padding: 16px;
  border-radius: 4px;
  gap: 16px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.8);
}

.useful-controls-dialog-overlay {
  background-color: rgba(0, 0, 0, 0.5);
}

.useful-controls-dialog-title {
  display: flex;
  width: 100%;
  justify-content: space-between;
  align-items: center;
  font-size: 18px;
}

.useful-controls-dialog-close {
  width: 25px;
  height: 25px;
  padding: 6px;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 4px;
  fill: $textColor;
  &:hover {
    background-color: $secondaryColorHighlight;
    cursor: pointer;
  }
}

.useful-controls-content-wrapper {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.divider {
  width: 100%;
  height: 1px;
  background-color: rgba(255, 255, 255, 0.12);
}

.useful-controls-button {
  position: absolute !important;
  bottom: 25px;
  right: 25px;
  transition: 200ms !important;
  border: none;
  color: white;
  width: 52px;
  height: 52px;
  display: flex;
  justify-content: center;
  align-items: center;
  fill: white;
  border-radius: 5% !important;
  background-color: $buttonColor !important;
  &:hover {
    background-color: color.adjust($buttonColor, $lightness: -10%) !important;
    cursor: pointer;
  }
}

.useful-controls-exit-button {
  position: absolute !important;
  right: 8px;
  top: 8px;
  border-radius: 2.5% !important;
  color: grey !important;
}

// Dialog is used fro useful controls window

// inventory grids
.inventory-grid-wrapper {
  display: flex;
  flex-direction: column;
  gap: calc($gridGap * 2);
}
.inventory-grid-header-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  background-color: $secondaryColor;
  padding: 4px 6px;
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.6);

  p {
    font-size: 15px;
    font-weight: 500;
  }
}

.inventory-grid-container {
  display: grid;
  height: $containerSize;
  grid-template-columns: repeat($gridCols, $gridSize);
  grid-auto-rows: $gridSize + 0.22vh;
  gap: $gridGap;
  overflow-y: scroll;
  background-color: $secondaryColor;
  border-radius: 6px;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.6);
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
}

.container-grid {
  height: auto;
  max-height: none;
  overflow-y: visible;
  border: 2px dashed rgba(255, 255, 255, 0.35);
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.6);
  transform: scale(0.95);
  transform-origin: top left;
  margin-left: 20px;
}

.container-header {
  &::before {
    content: '';
  }
}

// inventory slots
.inventory-slot {
  background-color: $secondaryColor;
  background-repeat: no-repeat;
  background-position: center;
  border-radius: 2.5%;
  image-rendering: -webkit-optimize-contrast;
  position: relative;
  background-size: 7vh;
  color: $textColor;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-style: inset;
  box-shadow: none;
  transition: box-shadow 150ms ease, border-color 150ms ease, transform 100ms ease;
  &:hover {
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.7);
  }
  &.dragging {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.85);
  }
}

.inventory-slot-label-box {
  background-color: $labelBg;
  color: $textColor;
  text-align: center;
  border-bottom-left-radius: 0.25vh;
  border-bottom-right-radius: 0.25vh;
}

.inventory-slot-label-text {
  text-transform: uppercase;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding: 2px 3px;
  font-weight: 500;
  font-family: $mainFont;
  font-size: 11px;
}

.inventory-slot-number {
  background-color: white;
  color: black;
  height: 12px;
  border-top-left-radius: 0.25vh;
  border-bottom-right-radius: 0.25vh;
  padding: 3px;
  font-size: 12px;
  font-family: $mainFont;
}

.item-slot-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
  p {
    font-size: 12px;
  }
}

.item-slot-header-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
}

.item-hotslot-header-wrapper {
  @extend .item-slot-header-wrapper;
  justify-content: space-between !important;
}

.item-slot-info-wrapper {
  display: flex;
  flex-direction: row;
  align-self: flex-end;
  padding: 3px;
  gap: 3px;
  p {
    font-size: 12px;
  }
}

.item-slot-currency-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
  padding-right: 3px;
  p {
    font-size: 14px;
    text-shadow: 0.1vh 0.1vh 0 rgba(0, 0, 0, 0.7);
  }
}

.item-slot-price-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  padding-right: 3px;
  p {
    font-size: 14px;
    text-shadow: 0.1vh 0.1vh 0 rgba(0, 0, 0, 0.7);
  }
}

.tooltip-wrapper {
  pointer-events: none;
  display: flex;
  background-color: $mainColor;
  width: 200px;
  padding: 8px;
  flex-direction: column;
  min-width: 200px;
  color: $textColor;
  font-family: $mainFont;
  border-radius: 4px;
  border-color: rgba(0, 0, 0, 0.2);
  border-style: inset;
  border-width: 1px;
  p {
    font-size: 12px;
    font-weight: 400;
  }
}

.tooltip-header-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  p {
    font-size: 15px;
    font-weight: 400;
  }
}

.tooltip-crafting-duration {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  svg {
    padding-right: 3px;
  }
  p {
    font-size: 14px;
  }
}

.tooltip-ingredients {
  padding-top: 5px;
}

.tooltip-ingredient {
  display: flex;
  flex-direction: row;
  align-items: center;
  img {
    width: 28px;
    height: 28px;
    padding-right: 5px;
  }
}

// hotbar
.hotbar-container {
  display: flex;
  align-items: center;
  gap: 2px;
  justify-content: center;
  width: 100%;
  position: absolute;
  bottom: 2vh;
}

.hotbar-item-slot {
  @extend .inventory-slot;
  width: $gridSize;
  height: $gridSize;
}

.hotbar-slot-header-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

// item notifications

.item-notification-container {
  display: flex;
  overflow-x: scroll;
  flex-wrap: nowrap;
  gap: 2px;
  position: absolute;
  bottom: 20vh;
  left: 50%;
  width: 100%;
  margin-left: calc(50% - calc($gridSize/2));
  transform: translate(-50%);
}

.item-notification-action-box {
  width: 100%;
  color: $textColor;
  background-color: $secondaryColor;
  text-transform: uppercase;
  text-align: center;
  border-top-left-radius: 0.25vh;
  border-top-right-radius: 0.25vh;
  font-family: $mainFont;
  p {
    font-size: 11px;
    padding: 2px;
    font-weight: 600;
  }
}

.item-notification-item-box {
  @extend .inventory-slot;
  height: $gridSize;
  width: $gridSize;
}

.durability-bar,
.weight-bar {
  background: $labelBg;
  height: 0.6vh;
  border-radius: 2px;
  overflow: hidden;
}

.transition-fade-enter {
  opacity: 0;
}

.transition-fade-enter-active {
  opacity: 1;
  transition: opacity 200ms;
}

.transition-fade-exit {
  opacity: 1;
}

.transition-fade-exit-active {
  opacity: 0;
  transition: opacity 200ms;
}

.transition-slide-up-enter {
  transform: translateY(200px);
}

.transition-slide-up-enter-active {
  transform: translateY(0px);
  transition: all 200ms;
}

.transition-slide-up-exit {
  transform: translateY(0px);
}

.transition-slide-up-exit-active {
  transform: translateY(200px);
  transition: all 200ms;
}

:root {
  --primary-color: #{$primaryColor};
  --accent-color: #{$accentColor};
}

.rarity-common {
  border-color: $rarityCommon !important;
  &:hover {
    border-color: color.adjust($rarityCommon, $lightness: 20%) !important;
  }
}
.rarity-uncommon {
  border-color: $rarityUncommon !important;
  &:hover {
    border-color: color.adjust($rarityUncommon, $lightness: 15%) !important;
  }
}
.rarity-rare {
  border-color: $rarityRare !important;
  &:hover {
    border-color: color.adjust($rarityRare, $lightness: 15%) !important;
  }
}
.rarity-epic {
  border-color: $rarityEpic !important;
  &:hover {
    border-color: color.adjust($rarityEpic, $lightness: 15%) !important;
  }
}
.rarity-legendary {
  border-color: $rarityLegendary !important;
  &:hover {
    border-color: color.adjust($rarityLegendary, $lightness: 15%) !important;
  }
}

.rarity-text {
  font-weight: 600;
  &.rarity-common {
    color: $rarityCommon;
  }
  &.rarity-uncommon {
    color: $rarityUncommon;
  }
  &.rarity-rare {
    color: $rarityRare;
  }
  &.rarity-epic {
    color: $rarityEpic;
  }
  &.rarity-legendary {
    color: $rarityLegendary;
  }
}
